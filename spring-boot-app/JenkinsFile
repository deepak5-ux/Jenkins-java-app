pipeline {
  agent any

  environment {
    SONAR_URL = "http://3.95.181.182:9000"
    DOCKER_IMAGE = "deepakb05/java-cicd:${BUILD_NUMBER}"
    GIT_REPO_NAME = "Jenkins-java-app"
    GIT_USER_NAME = "deepak5-ux"
  }

  stages {
    stage('Cleanup') {
      steps {
        deleteDir()  // wipes out workspace before checkout
      }
    }

    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build and Test') {
      steps {
        sh 'cd spring-boot-app && mvn clean package -DskipTests'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd spring-boot-app && mvn sonar:sonar \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          // Build Docker image from spring-boot-app directory
          def appImage = docker.build("${DOCKER_IMAGE}", "spring-boot-app")

          // Push to Docker Hub
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            appImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "deepakbalraj511@gmail.com"
            git config user.name "Deepak"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
